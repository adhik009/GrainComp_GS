#!/bin/bash
#PBS -N oe_STSE_BTx642
#PBS -l select=1:ncpus=1:mem=5gb,walltime=72:00:00
#PBS -j oe
#PBS -J 1-30

echo 'START ------------------------------'

module add anaconda
source activate r_env_360
##lib_r360='.libPaths(c('~/.conda/envs/r_env_360/lib', .libPaths()))'
src='/panicle/ssapkot/GrainComp/'
#
DESIGN_FILE='/panicle/ssapkot/git_repo/GrainComp_GS/scripts/Design_File/BTx642_STSE_traits_seed3.txt'
DESIGN=$(cat ${DESIGN_FILE} | head -n ${PBS_ARRAY_INDEX} | tail -n 1)
#
IFS=',' read -ra ARRAY <<< "${DESIGN}"
#
#MODEL="${ARRAY[0]}"
TRAIT="${ARRAY[0]}"
SEED="${ARRAY[1]}"
#
###Rscript  <$src/scripts/CV_Bayesian_BGLR.R
export LD_LIBRARY_PATH=/home/ssapkot/.conda/envs/r_env_360/lib/:$LD_LIBRARY_PATH

R -e "

library(BGLR)
library(BMTME)

setwd('/scratch2/ssapkot/GrainComp/')
load('/panicle/ssapkot/git_repo/GrainComp_GS/data/BTx642_BMTME.RData') ##load geno-pheno files
load('/panicle/ssapkot/git_repo/GrainComp_GS/data/BTx642_GrainComp.RData')
iter = \"${SEED}\"
#iter = '123'

pop <- 'BTx642'
dir.create(paste0(pop))
setwd(paste0(pop))

method <- 'STSE'
dir.create(paste0(method))
setwd(paste0(method))

set.seed(iter)

pheno <- phenoBME

n <- nrow(phenoBME)
m <- ceiling(n/5) ### to get the number of cv folds

#set the number of iterations and burnIns and thinning parameter
nIter <- 20000
burnIn <- 10000
thin = 1

# rownames(G) = 1:nrow(G)

trait = \"${TRAIT}\"

y = pheno[,trait]

dir.create(paste0(trait))
setwd(paste0(trait))

model = 'BRR'

dir.create(paste(trait,iter,sep='_'))
setwd(paste(trait,iter,sep='_'))

    
    Pred_value <- c()
    cv_pool = rep(1:5, each=m)
    folds = sample(cv_pool,n)
        all_pred <- c()
        pred <- c()
        yhat <- data.frame(cbind(y, yhat = NA))
        yhat\$yhat <- as.numeric(yhat\$yhat)
        row.names(yhat) <- row.names(y)

        corr <- c()
       for(k in 1:5){
            
           test <- which(folds==k)
           #Make training (TRN) and testing (TST) dfs
           yNA <- y
           yNA[test] <- NA #Mask yields for validation set

            ETA =  list(G=list(V=EVD\$vectors,d=EVD\$values,model='RKHS'))
            fm=BGLR(y=yNA,ETA=ETA, nIter=nIter,burnIn=burnIn, thin=thin, verbose=FALSE, saveAt=paste0(trait,'_',iter,'_'))

            yhat\$yhat[test]=fm\$yHat[test]

            corr[k] <- cor(yhat\$yhat[test],yhat\$y[test], use='complete.obs')
           }
        pred <- unlist(corr[])        
        all_pred <- cor(yhat\$y,yhat\$yhat)
        #accuracy <- rbind(pred,all_pred)
        
        setwd('../')
        saveRDS(fm, file=paste0(pop,'_STSE_',trait,'_Model.rds') )
   write.csv(pred,file=paste('Predictability_GBLUP',method,trait,iter,'CV5.csv',sep='_'),row.names=FALSE)

    "

    echo "-----------------FINISH"
